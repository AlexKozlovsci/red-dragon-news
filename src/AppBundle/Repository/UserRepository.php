<?php

namespace AppBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    public function getAllUserCount(): int
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT COUNT(u) FROM AppBundle:User u'
            )
            ->getSingleScalarResult();
    }

    public function getAllUsers(int $offset, int $itemsPerPage): array
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT u FROM AppBundle:User u'
            )
            ->setFirstResult($offset)
            ->setMaxResults($itemsPerPage)
            ->getResult();
    }

    public function getSortedUsers(string $sortField, bool $isAscending): array
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT u FROM AppBundle:User u ORDER BY u.' . $sortField . ' ' . ($isAscending ? 'ASC' : 'DESC')
            )
            ->getResult();
    }

    public function getSortedAndFilteredUsers(string $sortField, bool $isAscending, array $filters)
    {
        $request = 'SELECT u FROM AppBundle:User u WHERE (u.' . $filters[0][0] . ' = :par0';
        for ($i = 1; $i < count($filters); $i++) {
            $request .= ' AND u.' . $filters[$i][0] . ' = ' . ':par' . $i;
        }
        $request .= ') ORDER BY u.' . $sortField . ' ' . ($isAscending ? 'ASC' : 'DESC');
        //$request = 'SELECT u FROM AppBundle:User u WHERE (u.email = \'user@example.com\' AND u.role = \'ROLE_USER\' AND u.isActive = \'true\') ORDER BY u.email DESC';
//        $f = fopen('/home/dmitry/Documents/log.txt', 'a');
//        fwrite($f, $request);
//        fclose($f);
        $temp = [];
        for ($i = 0; $i < count($filters); $i++) {
            $temp['par' . $i] = $filters[$i][1];
        }

        $req =  $this->getEntityManager()->createQuery($request)->setParameters($temp);

        $f = fopen('/home/dmitry/Documents/log.txt', 'a');
        fwrite($f, print_r($temp, 1));
        fwrite($f, $req->getDQL());
        fclose($f);


        return $req->getResult();
    }
}


